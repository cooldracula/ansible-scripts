---
# tasks for hardening a server before further ansible work

- name: Setup passwordless sudo
  ansible.builtin.lineinfile:
    path: /etc/sudoers
    state: present
    regex: '^%sudo'
    line: '%sudo ALL=(ALL) NOPASSWD: ALL'
    validate: '/usr/sbin/visudo -cf %s'


- name: Create a new regular user with sudo privileges
  ansible.builtin.user:
    name: "{{ admin_username }}"
    state: present
    groups: sudo
    append: true
    password: "{{ admin_password }}"
    shell: "/bin/bash"
    create_home: true


- name: Set authorized key for remote admin
  ansible.posix.authorized_key:
    user: "{{ admin_username }}"
    state: present
    key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/' + admin_ssh_key) }}"


- name: Disable password login for everyone
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    state: present
    regexp: '^#?PasswordAuthentication'
    line: 'PasswordAuthentication no'
    validate: "/usr/sbin/sshd -t -f %s"


- name: Disable login for root
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    state: present
    regexp: '^#?PermitRootLogin'
    line: 'PermitRootLogin no'
    validate: "/usr/sbin/sshd -t -f %s"


- name: Restart sshd
  ansible.builtin.systemd:
    name: ssh
    daemon_reload: true
    state: restarted


- name: UFW - Allow SSH connections
  community.general.ufw:
    rule: allow
    name: OpenSSH


- name: UFW - Enable and deny by default
  community.general.ufw:
    state: enabled
    default: deny
