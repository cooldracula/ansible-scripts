---
# This role sets up nginx, and the proper config, for
# a planetary room instance where all the services are on a
# single host and share a domain. For example: the host planet.fun
# has go-ssb-room, planetary-graphql, and rooms-frontend all running
# on it and they are accessible via planet.name/login, planet.name, and
# planet.name/graphql respectively

- name: Update and upgrade apt packages
  apt:
    upgrade: yes
    update_cache: yes
    cache_valid_time: 86400


- name: Install nginx and certbot
  apt:
    pkg:
      - nginx
      - certbot
      - python3-certbot-nginx
    state: latest


- name: Confirm nginx conf folder exists
  ansible.builtin.stat:
    path: "/etc/nginx/conf.d"
  register: conf_d

# This sets the connection_upgrade var used in our site config
- name: Copy websocket_upgrade.conf to conf.d
  ansible.builtin.copy:
    src: websocket_upgrade.conf
    dest: "/etc/nginx/conf.d/websocket_upgrade.conf"
  when: conf_d.stat.exists


- name: Build and copy over site config
  ansible.builtin.template:
    src: site.conf.tpl
    dest: "/etc/nginx/sites-available/{{ inventory_hostname }}"


- name: remove default site config
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent


- name: symlink site config to sites-enabled
  file:
    src: "/etc/nginx/sites-available/{{ inventory_hostname }}"
    dest: "/etc/nginx/sites-enabled/{{ inventory_hostname }}"
    state: link


- name: Ensure config is valid
  ansible.builtin.command: nginx -t
  changed_when: false
  notify: restart nginx


- name: "Print out certbot instructions"
  ansible.builtin.debug:
    msg: >
      Congratulations! You've got everything set up and are almost done.
      The only thing left is to run certbot so your site is actually up.
      This is best done manually on the host server.
      First, ensure you have your DNS set up with following records:
        A Record: {{inventory_hostname}}-> pointing to the IP of yr host
        A Record: *.{{inventory_hostname}}->pointing to same ip "
      Then, after ssh'ing into the host, run this command:
          certbot certonly --manual \
          --server https://acme-v02.api.letsencrypt.org/directory \
          --preferred-challenges dns-01 \
          -d '{{ inventory_hostname }}' -d '*.{{ inventory_hostname }}'
